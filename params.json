{"name":"Laravel CDN Package","tagline":"Laravel CDN Assets Manager","body":"# Laravel CDN Assets Manager\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/publiux/laravelcdn/v/stable)](https://packagist.org/packages/publiux/laravelcdn)\r\n[![Total Downloads](https://poser.pugx.org/publiux/laravelcdn/downloads)](https://packagist.org/packages/publiux/laravelcdn)\r\n[![Build Status](https://travis-ci.org/publiux/laravelcdn.svg)](https://travis-ci.org/publiux/laravelcdn)\r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/publiux/laravelcdn/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/publiux/laravelcdn/?branch=master)\r\n[![License](https://poser.pugx.org/publiux/laravelcdn/license)](https://packagist.org/packages/publiux/laravelcdn)\r\n\r\n\r\n##### Content Delivery Network Package for Laravel\r\n\r\nThe package provides the developer the ability to upload his assets (or any public file) to a CDN with a single artisan command.\r\nAnd then it allows him to switch between the local and the online version of the files.\r\n\r\n###### Fork From [Vinelab/cdn](https://github.com/Vinelab/cdn)\r\nThis project has been forked from https://github.com/Vinelab/cdn. All credit for the original work goes there.\r\n\r\n#### Laravel Support\r\n- This fork support Laravel 5.2. (`master`).\r\n- As new versions of Laravel are released, new branches will be created to create compatibility if there are breaking changes in laravel.\r\n\r\n## Highlights\r\n\r\n- Amazon Web Services - S3\r\n- Artisan command to upload content to CDN\r\n- Simple Facade to access CDN assets\r\n\r\n\r\n### Questions\r\n1. Is this package an alternative to Laravel FileSystem and do they work together?\r\n\r\n+ No, the package was introduced in Laravel 4 and it's main purpose is to manage your CDN assets by loading them from the CDN into your Views pages, and easily switch between your Local and CDN version of the files. As well it allows you to upload all your assets with single command after specifying the assets directory and rules. The FileSystem was introduced in Laravel 5 and it's designed to facilitate the loading/uploading of files form/to a CDN. It can be used the same way as this Package for loading assets from the CDN, but it's harder to upload your assets to the CDN since it expect you to upload your files one by one. As a result this package still not a replacement of the Laravel FileSystem and they can be used together.\r\n\r\n\r\n## Installation\r\n\r\n#### Via Composer\r\n\r\nRequire `publiux/laravelcdn` in your project:\r\n\r\n```bash \r\ncomposer require publiux/laravelcdn\r\n```\r\n\r\n*Since this is a Laravel package we need to register the service provider:*\r\n\r\nAdd the service provider to `config/app.php`:\r\n\r\n```php\r\n'providers' => array(\r\n     //...\r\n     Publiux\\laravelcdn\\CdnServiceProvider::class,\r\n),\r\n```\r\n\r\nPublish the package config file:\r\n\r\n```bash\r\nphp artisan vendor:publish\r\n```\r\n\r\n## Environment Configuration\r\n\r\nThis package can be configured by editing the config/app.php file.  Alternatively, you can set many of these options in as environment variables in your '.env' file.\r\n\r\n##### AWS Credentials\r\nSet your AWS Credentials and other settings in the `.env` file.\r\n\r\n*Note: you should always have an `.env` file at the project root, to hold your sensitive information. This file should usually not be committed to your VCS.*\r\n\r\n```bash\r\nAWS_ACCESS_KEY_ID=\r\nAWS_SECRET_ACCESS_KEY=\r\n```\r\n\r\n##### CDN URL\r\n\r\nSet the CDN URL:\r\n\r\n```php\r\n'url' => env('CDN_Url', 'https://s3.amazonaws.com'),\r\n```\r\n\r\nThis can altered in your '.env' file as follows:\r\n\r\n```bash\r\nCDN_Url=\r\n```\r\n\r\n##### Bypass\r\n\r\nTo load your LOCAL assets for testing or during development, set the `bypass` option to `true`:\r\n\r\n```php\r\n'bypass' => env('CDN_Bypass', false),\r\n```\r\n\r\nThis can be altered in your '.env' file as follows:\r\n\r\n```bash\r\nCDN_Bypass=\r\n```\r\n\r\n##### Cloudfront Support\r\n\r\n```php\r\n'cloudfront'    => [\r\n    'use' => env('CDN_UseCloudFront', false),\r\n    'cdn_url' => env('CDN_CloudFrontUrl', false)\r\n],\r\n```\r\n\r\nThis can be altered in your '.env' file as follows:\r\n\r\n```bash\r\nCDN_UseCloudFront=\r\nCDN_CloudFrontUrl=\r\n```\r\n\r\n##### Default CDN Provider\r\nFor now, the only CDN provider available is AwsS3. This option cannot be set in '.env'.\r\n\r\n```php\r\n'default' => 'AwsS3',\r\n```\r\n\r\n##### CDN Provider Configuration\r\n\r\n```php\r\n'aws' => [\r\n\r\n    's3' => [\r\n    \r\n        'version'   => 'latest',\r\n        'region'    => '',\r\n\r\n        'buckets' => [\r\n            'my-backup-bucket' => '*',\r\n        ]\r\n    ]\r\n],\r\n```\r\n\r\n###### Multiple Buckets\r\n\r\n```php\r\n'buckets' => [\r\n\r\n    'my-default-bucket' => '*',\r\n    \r\n    // 'js-bucket' => ['public/js'],\r\n    // 'css-bucket' => ['public/css'],\r\n    // ...\r\n]\r\n\r\n```\r\n\r\n#### Files & Directories\r\n\r\n###### Include:\r\n\r\nSpecify directories, extensions, files and patterns to be uploaded.\r\n\r\n```php\r\n'include'    => [\r\n    'directories'   => ['public/dist'],\r\n    'extensions'    => ['.js', '.css', '.yxz'],\r\n    'patterns'      => ['**/*.coffee'],\r\n],\r\n```\r\n\r\n###### Exclude:\r\n\r\nSpecify what to be ignored.\r\n\r\n```php\r\n'exclude'    => [\r\n    'directories'   => ['public/uploads'],\r\n    'files'         => [''],\r\n    'extensions'    => ['.TODO', '.txt'],\r\n    'patterns'      => ['src/*', '.idea/*'],\r\n    'hidden'        => true, // ignore hidden files\r\n],\r\n```\r\n\r\n\r\n\r\n\r\n##### Other Configurations\r\n\r\n```php\r\n'acl'           => 'public-read',\r\n'metadata'      => [ ],\r\n'expires'       => gmdate(\"D, d M Y H:i:s T\", strtotime(\"+5 years\")),\r\n'cache-control' => 'max-age=2628000',\r\n```\r\n\r\nYou can always refer to the AWS S3 Documentation for more details: [aws-sdk-php](http://docs.aws.amazon.com/aws-sdk-php/v3/guide/)\r\n\r\n## Usage\r\n\r\nYou can 'push' your assets to your CDN and you can 'empty' your assets as well using the commands below.\r\n\r\n#### Push\r\n\r\nOnly changed assets are pushed to the CDN. (THanks, )\r\n\r\nUpload assets to CDN\r\n```bash\r\nphp artisan cdn:push\r\n```\r\n#### Empty\r\n\r\nDelete assets from CDN\r\n```bash\r\nphp artisan cdn:empty\r\n```\r\n\r\n#### Load Assets\r\n\r\nUse the facade `Cdn` to call the `Cdn::asset()` function.\r\n\r\n*Note: the `asset` works the same as the Laravel `asset` it start looking for assets in the `public/` directory:*\r\n\r\n```blade\r\n{{Cdn::asset('assets/js/main.js')}}        // example result: https://js-bucket.s3.amazonaws.com/public/assets/js/main.js\r\n\r\n{{Cdn::asset('assets/css/style.css')}}        // example result: https://css-bucket.s3.amazonaws.com/public/assets/css/style.css\r\n```\r\n\r\nTo use a file from outside the `public/` directory, anywhere in `app/` use the `Cdn::path()` function:\r\n\r\n```blade\r\n{{Cdn::path('private/something/file.txt')}}        // example result: https://css-bucket.s3.amazonaws.com/private/something/file.txt\r\n```\r\n\r\n\r\n## Test\r\n\r\nTo run the tests, run the following command from the project folder.\r\n\r\n```bash\r\n$ ./vendor/bin/phpunit\r\n```\r\n\r\n## Support\r\n\r\nPlease request support or submit issues [via Github](https://github.com/publiux/laravelcdn/issues)\r\n\r\n\r\n## Contributing\r\n\r\nPlease see [CONTRIBUTING](https://github.com/publiux/laravelcdn/blob/master/CONTRIBUTING.md) for details.\r\n\r\n## Security Related Issues\r\n\r\nIf you discover any security related issues, please email publiux@gmail.com instead of using the issue tracker for faster response. You should open an issue at the same time.\r\n\r\n## Credits\r\n- [Raul Ruiz](https://github.com/publiux) (forker)\r\n- [Mahmoud Zalt](https://github.com/Mahmoudz) (original developer)\r\n- [Filipe Garcia](https://github.com/filipegar) (contributred pre-fork, uncredited pull request for duplicate uploading verification)\r\n- [Contributors from original project](https://github.com/Vinelab/cdn/graphs/contributors)\r\n- [All Contributors for this Fork](../../contributors)\r\n\r\n\r\n## License\r\n\r\nThe MIT License (MIT). Please see [License File](https://github.com/publiux/laravelcdn/blob/master/LICENSE) for more information.\r\n\r\n## Changelog\r\n\r\n#### v1.0.3\r\n- Fixed bug where schemeless Urls could not be used for CloudFront. Valid urls now begin with http, https, or simply '//'\r\n\r\n#### v1.0.2\r\n- Fixed bug where the elixir function was inadvertently omitted from the release.\r\n\r\n#### v1.0.1\r\n- Allow configuration using environment values\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}